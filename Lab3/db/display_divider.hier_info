|display_divider
dividend[0] => divider:div.dividend[0]
dividend[0] => leddcd:dividendLoop:0:dividendDecoder.data_in[0]
dividend[1] => divider:div.dividend[1]
dividend[1] => leddcd:dividendLoop:0:dividendDecoder.data_in[1]
dividend[2] => divider:div.dividend[2]
dividend[2] => leddcd:dividendLoop:0:dividendDecoder.data_in[2]
dividend[3] => divider:div.dividend[3]
dividend[3] => leddcd:dividendLoop:0:dividendDecoder.data_in[3]
dividend[4] => divider:div.dividend[4]
dividend[4] => leddcd:dividendLoop:1:dividendDecoder.data_in[0]
dividend[5] => divider:div.dividend[5]
dividend[5] => leddcd:dividendLoop:1:dividendDecoder.data_in[1]
dividend[6] => divider:div.dividend[6]
dividend[6] => leddcd:dividendLoop:1:dividendDecoder.data_in[2]
dividend[7] => divider:div.dividend[7]
dividend[7] => leddcd:dividendLoop:1:dividendDecoder.data_in[3]
dividend[8] => divider:div.dividend[8]
dividend[8] => leddcd:dividendLoop:2:dividendDecoder.data_in[0]
dividend[9] => divider:div.dividend[9]
dividend[9] => leddcd:dividendLoop:2:dividendDecoder.data_in[1]
dividend[10] => divider:div.dividend[10]
dividend[10] => leddcd:dividendLoop:2:dividendDecoder.data_in[2]
dividend[11] => divider:div.dividend[11]
dividend[11] => leddcd:dividendLoop:2:dividendDecoder.data_in[3]
dividend[12] => divider:div.dividend[12]
dividend[12] => leddcd:dividendLoop:3:dividendDecoder.data_in[0]
dividend[13] => divider:div.dividend[13]
dividend[13] => leddcd:dividendLoop:3:dividendDecoder.data_in[1]
dividend[14] => divider:div.dividend[14]
dividend[14] => leddcd:dividendLoop:3:dividendDecoder.data_in[2]
dividend[15] => divider:div.dividend[15]
dividend[15] => leddcd:dividendLoop:3:dividendDecoder.data_in[3]
divisor[0] => divider:div.divisor[0]
divisor[0] => leddcd:divisorLoop:0:divisorDecoder.data_in[0]
divisor[1] => divider:div.divisor[1]
divisor[1] => leddcd:divisorLoop:0:divisorDecoder.data_in[1]
divisor[2] => divider:div.divisor[2]
divisor[2] => leddcd:divisorLoop:0:divisorDecoder.data_in[2]
divisor[3] => divider:div.divisor[3]
divisor[3] => leddcd:divisorLoop:0:divisorDecoder.data_in[3]
divisor[4] => divider:div.divisor[4]
divisor[4] => leddcd:divisorLoop:1:divisorDecoder.data_in[0]
divisor[5] => divider:div.divisor[5]
divisor[5] => leddcd:divisorLoop:1:divisorDecoder.data_in[1]
divisor[6] => divider:div.divisor[6]
divisor[6] => leddcd:divisorLoop:1:divisorDecoder.data_in[2]
divisor[7] => divider:div.divisor[7]
divisor[7] => leddcd:divisorLoop:1:divisorDecoder.data_in[3]
start => divider:div.start
clk => divider:div.clk
overflow <= divider:div.overflow
dividend_segments_out[0] <= leddcd:dividendLoop:0:dividendDecoder.segments_out[0]
dividend_segments_out[1] <= leddcd:dividendLoop:0:dividendDecoder.segments_out[1]
dividend_segments_out[2] <= leddcd:dividendLoop:0:dividendDecoder.segments_out[2]
dividend_segments_out[3] <= leddcd:dividendLoop:0:dividendDecoder.segments_out[3]
dividend_segments_out[4] <= leddcd:dividendLoop:0:dividendDecoder.segments_out[4]
dividend_segments_out[5] <= leddcd:dividendLoop:0:dividendDecoder.segments_out[5]
dividend_segments_out[6] <= leddcd:dividendLoop:0:dividendDecoder.segments_out[6]
dividend_segments_out[7] <= leddcd:dividendLoop:1:dividendDecoder.segments_out[0]
dividend_segments_out[8] <= leddcd:dividendLoop:1:dividendDecoder.segments_out[1]
dividend_segments_out[9] <= leddcd:dividendLoop:1:dividendDecoder.segments_out[2]
dividend_segments_out[10] <= leddcd:dividendLoop:1:dividendDecoder.segments_out[3]
dividend_segments_out[11] <= leddcd:dividendLoop:1:dividendDecoder.segments_out[4]
dividend_segments_out[12] <= leddcd:dividendLoop:1:dividendDecoder.segments_out[5]
dividend_segments_out[13] <= leddcd:dividendLoop:1:dividendDecoder.segments_out[6]
dividend_segments_out[14] <= leddcd:dividendLoop:2:dividendDecoder.segments_out[0]
dividend_segments_out[15] <= leddcd:dividendLoop:2:dividendDecoder.segments_out[1]
dividend_segments_out[16] <= leddcd:dividendLoop:2:dividendDecoder.segments_out[2]
dividend_segments_out[17] <= leddcd:dividendLoop:2:dividendDecoder.segments_out[3]
dividend_segments_out[18] <= leddcd:dividendLoop:2:dividendDecoder.segments_out[4]
dividend_segments_out[19] <= leddcd:dividendLoop:2:dividendDecoder.segments_out[5]
dividend_segments_out[20] <= leddcd:dividendLoop:2:dividendDecoder.segments_out[6]
dividend_segments_out[21] <= leddcd:dividendLoop:3:dividendDecoder.segments_out[0]
dividend_segments_out[22] <= leddcd:dividendLoop:3:dividendDecoder.segments_out[1]
dividend_segments_out[23] <= leddcd:dividendLoop:3:dividendDecoder.segments_out[2]
dividend_segments_out[24] <= leddcd:dividendLoop:3:dividendDecoder.segments_out[3]
dividend_segments_out[25] <= leddcd:dividendLoop:3:dividendDecoder.segments_out[4]
dividend_segments_out[26] <= leddcd:dividendLoop:3:dividendDecoder.segments_out[5]
dividend_segments_out[27] <= leddcd:dividendLoop:3:dividendDecoder.segments_out[6]
divisor_segments_out[0] <= leddcd:divisorLoop:0:divisorDecoder.segments_out[0]
divisor_segments_out[1] <= leddcd:divisorLoop:0:divisorDecoder.segments_out[1]
divisor_segments_out[2] <= leddcd:divisorLoop:0:divisorDecoder.segments_out[2]
divisor_segments_out[3] <= leddcd:divisorLoop:0:divisorDecoder.segments_out[3]
divisor_segments_out[4] <= leddcd:divisorLoop:0:divisorDecoder.segments_out[4]
divisor_segments_out[5] <= leddcd:divisorLoop:0:divisorDecoder.segments_out[5]
divisor_segments_out[6] <= leddcd:divisorLoop:0:divisorDecoder.segments_out[6]
divisor_segments_out[7] <= leddcd:divisorLoop:1:divisorDecoder.segments_out[0]
divisor_segments_out[8] <= leddcd:divisorLoop:1:divisorDecoder.segments_out[1]
divisor_segments_out[9] <= leddcd:divisorLoop:1:divisorDecoder.segments_out[2]
divisor_segments_out[10] <= leddcd:divisorLoop:1:divisorDecoder.segments_out[3]
divisor_segments_out[11] <= leddcd:divisorLoop:1:divisorDecoder.segments_out[4]
divisor_segments_out[12] <= leddcd:divisorLoop:1:divisorDecoder.segments_out[5]
divisor_segments_out[13] <= leddcd:divisorLoop:1:divisorDecoder.segments_out[6]
quotient_segments_out[0] <= leddcd:quotientLoop:0:quotientDecoder.segments_out[0]
quotient_segments_out[1] <= leddcd:quotientLoop:0:quotientDecoder.segments_out[1]
quotient_segments_out[2] <= leddcd:quotientLoop:0:quotientDecoder.segments_out[2]
quotient_segments_out[3] <= leddcd:quotientLoop:0:quotientDecoder.segments_out[3]
quotient_segments_out[4] <= leddcd:quotientLoop:0:quotientDecoder.segments_out[4]
quotient_segments_out[5] <= leddcd:quotientLoop:0:quotientDecoder.segments_out[5]
quotient_segments_out[6] <= leddcd:quotientLoop:0:quotientDecoder.segments_out[6]
quotient_segments_out[7] <= leddcd:quotientLoop:1:quotientDecoder.segments_out[0]
quotient_segments_out[8] <= leddcd:quotientLoop:1:quotientDecoder.segments_out[1]
quotient_segments_out[9] <= leddcd:quotientLoop:1:quotientDecoder.segments_out[2]
quotient_segments_out[10] <= leddcd:quotientLoop:1:quotientDecoder.segments_out[3]
quotient_segments_out[11] <= leddcd:quotientLoop:1:quotientDecoder.segments_out[4]
quotient_segments_out[12] <= leddcd:quotientLoop:1:quotientDecoder.segments_out[5]
quotient_segments_out[13] <= leddcd:quotientLoop:1:quotientDecoder.segments_out[6]
quotient_segments_out[14] <= leddcd:quotientLoop:2:quotientDecoder.segments_out[0]
quotient_segments_out[15] <= leddcd:quotientLoop:2:quotientDecoder.segments_out[1]
quotient_segments_out[16] <= leddcd:quotientLoop:2:quotientDecoder.segments_out[2]
quotient_segments_out[17] <= leddcd:quotientLoop:2:quotientDecoder.segments_out[3]
quotient_segments_out[18] <= leddcd:quotientLoop:2:quotientDecoder.segments_out[4]
quotient_segments_out[19] <= leddcd:quotientLoop:2:quotientDecoder.segments_out[5]
quotient_segments_out[20] <= leddcd:quotientLoop:2:quotientDecoder.segments_out[6]
quotient_segments_out[21] <= leddcd:quotientLoop:3:quotientDecoder.segments_out[0]
quotient_segments_out[22] <= leddcd:quotientLoop:3:quotientDecoder.segments_out[1]
quotient_segments_out[23] <= leddcd:quotientLoop:3:quotientDecoder.segments_out[2]
quotient_segments_out[24] <= leddcd:quotientLoop:3:quotientDecoder.segments_out[3]
quotient_segments_out[25] <= leddcd:quotientLoop:3:quotientDecoder.segments_out[4]
quotient_segments_out[26] <= leddcd:quotientLoop:3:quotientDecoder.segments_out[5]
quotient_segments_out[27] <= leddcd:quotientLoop:3:quotientDecoder.segments_out[6]
remainder_segments_out[0] <= leddcd:remainderLoop:0:remainderDecoder.segments_out[0]
remainder_segments_out[1] <= leddcd:remainderLoop:0:remainderDecoder.segments_out[1]
remainder_segments_out[2] <= leddcd:remainderLoop:0:remainderDecoder.segments_out[2]
remainder_segments_out[3] <= leddcd:remainderLoop:0:remainderDecoder.segments_out[3]
remainder_segments_out[4] <= leddcd:remainderLoop:0:remainderDecoder.segments_out[4]
remainder_segments_out[5] <= leddcd:remainderLoop:0:remainderDecoder.segments_out[5]
remainder_segments_out[6] <= leddcd:remainderLoop:0:remainderDecoder.segments_out[6]
remainder_segments_out[7] <= leddcd:remainderLoop:1:remainderDecoder.segments_out[0]
remainder_segments_out[8] <= leddcd:remainderLoop:1:remainderDecoder.segments_out[1]
remainder_segments_out[9] <= leddcd:remainderLoop:1:remainderDecoder.segments_out[2]
remainder_segments_out[10] <= leddcd:remainderLoop:1:remainderDecoder.segments_out[3]
remainder_segments_out[11] <= leddcd:remainderLoop:1:remainderDecoder.segments_out[4]
remainder_segments_out[12] <= leddcd:remainderLoop:1:remainderDecoder.segments_out[5]
remainder_segments_out[13] <= leddcd:remainderLoop:1:remainderDecoder.segments_out[6]


|display_divider|divider:div
clk => DINL[0].CLK
clk => DINL[1].CLK
clk => DINL[2].CLK
clk => DINL[3].CLK
clk => DINL[4].CLK
clk => DINL[5].CLK
clk => DINL[6].CLK
clk => DINL[7].CLK
clk => DINL[8].CLK
clk => quotient[0]~reg0.CLK
clk => quotient[1]~reg0.CLK
clk => quotient[2]~reg0.CLK
clk => quotient[3]~reg0.CLK
clk => quotient[4]~reg0.CLK
clk => quotient[5]~reg0.CLK
clk => quotient[6]~reg0.CLK
clk => quotient[7]~reg0.CLK
clk => quotient[8]~reg0.CLK
clk => quotient[9]~reg0.CLK
clk => quotient[10]~reg0.CLK
clk => quotient[11]~reg0.CLK
clk => quotient[12]~reg0.CLK
clk => quotient[13]~reg0.CLK
clk => quotient[14]~reg0.CLK
clk => quotient[15]~reg0.CLK
clk => intDividend[0].CLK
clk => intDividend[1].CLK
clk => intDividend[2].CLK
clk => intDividend[3].CLK
clk => intDividend[4].CLK
clk => intDividend[5].CLK
clk => intDividend[6].CLK
clk => intDividend[7].CLK
clk => intDividend[8].CLK
clk => intDividend[9].CLK
clk => intDividend[10].CLK
clk => intDividend[11].CLK
clk => intDividend[12].CLK
clk => intDividend[13].CLK
clk => intDividend[14].CLK
clk => intDividend[15].CLK
clk => intDivisor[0].CLK
clk => intDivisor[1].CLK
clk => intDivisor[2].CLK
clk => intDivisor[3].CLK
clk => intDivisor[4].CLK
clk => intDivisor[5].CLK
clk => intDivisor[6].CLK
clk => intDivisor[7].CLK
clk => overflow~reg0.CLK
clk => \clocked_process:count[0].CLK
clk => \clocked_process:count[1].CLK
clk => \clocked_process:count[2].CLK
clk => \clocked_process:count[3].CLK
clk => \clocked_process:count[4].CLK
clk => \clocked_process:count[5].CLK
clk => \clocked_process:count[6].CLK
clk => \clocked_process:count[7].CLK
clk => \clocked_process:count[8].CLK
clk => \clocked_process:count[9].CLK
clk => \clocked_process:count[10].CLK
clk => \clocked_process:count[11].CLK
clk => \clocked_process:count[12].CLK
clk => \clocked_process:count[13].CLK
clk => \clocked_process:count[14].CLK
clk => \clocked_process:count[15].CLK
clk => \clocked_process:count[16].CLK
clk => \clocked_process:count[17].CLK
clk => \clocked_process:count[18].CLK
clk => \clocked_process:count[19].CLK
clk => \clocked_process:count[20].CLK
clk => \clocked_process:count[21].CLK
clk => \clocked_process:count[22].CLK
clk => \clocked_process:count[23].CLK
clk => \clocked_process:count[24].CLK
clk => \clocked_process:count[25].CLK
clk => \clocked_process:count[26].CLK
clk => \clocked_process:count[27].CLK
clk => \clocked_process:count[28].CLK
clk => \clocked_process:count[29].CLK
clk => \clocked_process:count[30].CLK
clk => \clocked_process:count[31].CLK
clk => \clocked_process:flag.CLK
clk => remainder[0]~reg0.CLK
clk => remainder[1]~reg0.CLK
clk => remainder[2]~reg0.CLK
clk => remainder[3]~reg0.CLK
clk => remainder[4]~reg0.CLK
clk => remainder[5]~reg0.CLK
clk => remainder[6]~reg0.CLK
clk => remainder[7]~reg0.CLK
clk => \clocked_process:varQ[0].CLK
clk => \clocked_process:varQ[1].CLK
clk => \clocked_process:varQ[2].CLK
clk => \clocked_process:varQ[3].CLK
clk => \clocked_process:varQ[4].CLK
clk => \clocked_process:varQ[5].CLK
clk => \clocked_process:varQ[6].CLK
clk => \clocked_process:varQ[7].CLK
clk => \clocked_process:varQ[8].CLK
clk => \clocked_process:varQ[9].CLK
clk => \clocked_process:varQ[10].CLK
clk => \clocked_process:varQ[11].CLK
clk => \clocked_process:varQ[12].CLK
clk => \clocked_process:varQ[13].CLK
clk => \clocked_process:varQ[14].CLK
clk => \clocked_process:varQ[15].CLK
start => clocked_process.IN1
dividend[0] => intDividend[0].DATAIN
dividend[1] => intDividend[1].DATAIN
dividend[2] => intDividend[2].DATAIN
dividend[3] => intDividend[3].DATAIN
dividend[4] => intDividend[4].DATAIN
dividend[5] => intDividend[5].DATAIN
dividend[6] => intDividend[6].DATAIN
dividend[7] => intDividend[7].DATAIN
dividend[8] => intDividend[8].DATAIN
dividend[9] => intDividend[9].DATAIN
dividend[10] => intDividend[10].DATAIN
dividend[11] => intDividend[11].DATAIN
dividend[12] => intDividend[12].DATAIN
dividend[13] => intDividend[13].DATAIN
dividend[14] => intDividend[14].DATAIN
dividend[15] => intDividend[15].DATAIN
divisor[0] => intDivisor[0].DATAIN
divisor[1] => intDivisor[1].DATAIN
divisor[2] => intDivisor[2].DATAIN
divisor[3] => intDivisor[3].DATAIN
divisor[4] => intDivisor[4].DATAIN
divisor[5] => intDivisor[5].DATAIN
divisor[6] => intDivisor[6].DATAIN
divisor[7] => intDivisor[7].DATAIN
quotient[0] <= quotient[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[1] <= quotient[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[2] <= quotient[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[3] <= quotient[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[4] <= quotient[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[5] <= quotient[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[6] <= quotient[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[7] <= quotient[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[8] <= quotient[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[9] <= quotient[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[10] <= quotient[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[11] <= quotient[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[12] <= quotient[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[13] <= quotient[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[14] <= quotient[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
quotient[15] <= quotient[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[0] <= remainder[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[1] <= remainder[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[2] <= remainder[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[3] <= remainder[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[4] <= remainder[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[5] <= remainder[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[6] <= remainder[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
remainder[7] <= remainder[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
overflow <= overflow~reg0.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|divider:div|comparator:comp
DINL[0] => LessThan0.IN10
DINL[0] => Add0.IN18
DINL[0] => DOUT.DATAB
DINL[1] => LessThan0.IN9
DINL[1] => Add0.IN17
DINL[1] => DOUT.DATAB
DINL[2] => LessThan0.IN8
DINL[2] => Add0.IN16
DINL[2] => DOUT.DATAB
DINL[3] => LessThan0.IN7
DINL[3] => Add0.IN15
DINL[3] => DOUT.DATAB
DINL[4] => LessThan0.IN6
DINL[4] => Add0.IN14
DINL[4] => DOUT.DATAB
DINL[5] => LessThan0.IN5
DINL[5] => Add0.IN13
DINL[5] => DOUT.DATAB
DINL[6] => LessThan0.IN4
DINL[6] => Add0.IN12
DINL[6] => DOUT.DATAB
DINL[7] => LessThan0.IN3
DINL[7] => Add0.IN11
DINL[7] => DOUT.DATAB
DINL[8] => LessThan0.IN2
DINL[8] => Add0.IN10
DINR[0] => Equal0.IN15
DINR[0] => \compare:DINR_u[0].DATAA
DINR[1] => Equal0.IN14
DINR[1] => \compare:DINR_u[1].DATAA
DINR[2] => Equal0.IN13
DINR[2] => \compare:DINR_u[2].DATAA
DINR[3] => Equal0.IN12
DINR[3] => \compare:DINR_u[3].DATAA
DINR[4] => Equal0.IN11
DINR[4] => \compare:DINR_u[4].DATAA
DINR[5] => Equal0.IN10
DINR[5] => \compare:DINR_u[5].DATAA
DINR[6] => Equal0.IN9
DINR[6] => \compare:DINR_u[6].DATAA
DINR[7] => Equal0.IN8
DINR[7] => \compare:DINR_u[7].DATAA
DOUT[0] <= DOUT.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= DOUT.DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= DOUT.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= DOUT.DB_MAX_OUTPUT_PORT_TYPE
DOUT[4] <= DOUT.DB_MAX_OUTPUT_PORT_TYPE
DOUT[5] <= DOUT.DB_MAX_OUTPUT_PORT_TYPE
DOUT[6] <= DOUT.DB_MAX_OUTPUT_PORT_TYPE
DOUT[7] <= DOUT.DB_MAX_OUTPUT_PORT_TYPE
isGreaterEq <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\dividendLoop:0:dividendDecoder
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\dividendLoop:1:dividendDecoder
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\dividendLoop:2:dividendDecoder
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\dividendLoop:3:dividendDecoder
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\divisorLoop:0:divisorDecoder
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\divisorLoop:1:divisorDecoder
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\quotientLoop:0:quotientDecoder
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\quotientLoop:1:quotientDecoder
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\quotientLoop:2:quotientDecoder
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\quotientLoop:3:quotientDecoder
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\remainderLoop:0:remainderDecoder
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|display_divider|leddcd:\remainderLoop:1:remainderDecoder
data_in[0] => Equal0.IN0
data_in[0] => Equal1.IN3
data_in[0] => Equal2.IN1
data_in[0] => Equal3.IN3
data_in[0] => Equal4.IN1
data_in[0] => Equal5.IN3
data_in[0] => Equal6.IN2
data_in[0] => Equal7.IN3
data_in[0] => Equal8.IN1
data_in[0] => Equal9.IN3
data_in[0] => Equal10.IN2
data_in[0] => Equal11.IN3
data_in[0] => Equal12.IN2
data_in[0] => Equal13.IN3
data_in[0] => Equal14.IN3
data_in[1] => Equal0.IN3
data_in[1] => Equal1.IN0
data_in[1] => Equal2.IN0
data_in[1] => Equal3.IN2
data_in[1] => Equal4.IN3
data_in[1] => Equal5.IN1
data_in[1] => Equal6.IN1
data_in[1] => Equal7.IN2
data_in[1] => Equal8.IN3
data_in[1] => Equal9.IN1
data_in[1] => Equal10.IN1
data_in[1] => Equal11.IN2
data_in[1] => Equal12.IN3
data_in[1] => Equal13.IN2
data_in[1] => Equal14.IN2
data_in[2] => Equal0.IN2
data_in[2] => Equal1.IN2
data_in[2] => Equal2.IN3
data_in[2] => Equal3.IN0
data_in[2] => Equal4.IN0
data_in[2] => Equal5.IN0
data_in[2] => Equal6.IN0
data_in[2] => Equal7.IN1
data_in[2] => Equal8.IN2
data_in[2] => Equal9.IN2
data_in[2] => Equal10.IN3
data_in[2] => Equal11.IN1
data_in[2] => Equal12.IN1
data_in[2] => Equal13.IN1
data_in[2] => Equal14.IN1
data_in[3] => Equal0.IN1
data_in[3] => Equal1.IN1
data_in[3] => Equal2.IN2
data_in[3] => Equal3.IN1
data_in[3] => Equal4.IN2
data_in[3] => Equal5.IN2
data_in[3] => Equal6.IN3
data_in[3] => Equal7.IN0
data_in[3] => Equal8.IN0
data_in[3] => Equal9.IN0
data_in[3] => Equal10.IN0
data_in[3] => Equal11.IN0
data_in[3] => Equal12.IN0
data_in[3] => Equal13.IN0
data_in[3] => Equal14.IN0
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


